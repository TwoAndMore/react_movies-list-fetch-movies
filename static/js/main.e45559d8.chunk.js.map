{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","useState","isLoading","setIsLoading","isError","setIsError","setTitle","setMovie","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Object","prototype","hasOwnProperty","call","Title","Plot","imdbID","Poster","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","trim","length","onClick","App","setMovies","every","oldMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,sBCAZ,IAAMC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAiB,IAA3C,mBAAOV,EAAP,KAAce,EAAd,KACA,EAA0BL,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcqB,EAAd,KA2CA,OACE,qCACE,uBACEpB,UAAU,aACVqB,SA7CoB,SAACC,GCftB,IAAkBC,EDgBrBD,EAAME,iBAENR,GAAa,IClBQO,EDoBZnB,ECnBJqB,MAAM,GAAD,OAHE,2CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDgBNL,MAAK,SAACM,GACL,GAAIC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAU,SACjDd,GAAW,OACN,CACL,MAKIc,EAJFK,EADF,EACEA,MACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,OAGFpB,EAAS,CACPhB,MAAOiC,EACPhC,YAAaiC,EACbpC,OAAmB,QAAXsC,EACJA,EACA,4DACJjC,QAAQ,8BAAD,OAAgCgC,GACvC5B,OAAQ4B,QAIbE,SAAQ,kBAAMzB,GAAa,OAe5B,UAIE,sBAAKhB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0C,QAAQ,cAAjC,yBAIA,qBAAK1C,UAAU,UAAf,SACE,uBACE,UAAQ,aACR2C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7C,UAAU,kBACV8C,MAAO1C,EACP2C,SA7Bc,SAACzB,GACzBH,EAASG,EAAM0B,OAAOF,OACtB5B,GAAW,QA+BJD,GACC,mBAAGjB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2C,KAAK,SACL3C,UAAWiD,IACT,SACA,WACA,CACE,aAAclC,IAGlBmC,SAAU9C,EAAM+C,OAAOC,QAAU,EAVnC,4BAgBDrD,GACC,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACR2C,KAAK,SACL3C,UAAU,oBACVqD,QAAS,WACPxC,EAAMd,GA3DpBoB,EAAS,IACTC,EAAS,OAqDC,qCAgBPrB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WE5HfuD,EAAM,WACjB,MAA4BxC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe8C,EAAf,KAQA,OACE,sBAAKvD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,MAde,SAACd,GAClBA,GAASU,EAAO+C,OAAM,SAAAC,GAAQ,OAAIA,EAAS9C,SAAWZ,EAAMY,WAC9D4C,GAAU,SAACG,GAAD,4BAAgCA,GAAhC,CAA+C3D,gBCP/D4D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e45559d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleSearchMovie = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(title)\n      .then((response) => {\n        if (Object.prototype.hasOwnProperty.call(response, 'Error')) {\n          setIsError(true);\n        } else {\n          const {\n            Title,\n            Plot,\n            imdbID,\n            Poster,\n          } = response as MovieData;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster !== 'N/A'\n              ? Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleInputSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const clearFoundData = () => {\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={title}\n              onChange={handleInputSearch}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={title.trim().length <= 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAdd(movie);\n                  clearFoundData();\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=559f077a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    if (movie && movies.every(oldMovie => oldMovie.imdbId !== movie.imdbId)) {\n      setMovies((currentMovies: Movie[]) => [...currentMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}